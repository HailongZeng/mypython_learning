
'''
表达式：由变量、常量和运算符组成的式子
阅读表达式：
    功能：
    值：
'''

'''
算术运算符和算术运算表达式
算术运算符：加减乘除（+、-、*、/），取模（%），求幂（**），取整（//）
算术运算表达式：1+1、2*3、a/3
    功能：进行相关符号的数学运算，不会改变变量的值
    值：相关的数学运算结果
'''
num1=2
num2=3
print(num1+num2)
print(num1-num2)
print(num1*num2)
print(num1/num2)
print(num1%num2)
print(num1**num2) #num1^num2,pow(num1,num2)
print(num1//num2)

'''
赋值运算符和赋值运算表达式
赋值运算符：=
赋值运算表达式： 格式：变量=表达式
    功能：计算了等号右侧表达式的值，并赋值给等号左侧的变量
    值：
'''
num3=10
num4=num3+20
print(num4)

'''
复合运算符：+=、-=、*=、/=、%=、**=、//=(本质上是赋值运算符）
'''

'''
if语句
格式：
if 表达式：
    语句

逻辑：当程序执行到if语句时，首先计算"表达式"的值。如果表达式的值为真，那么就执行if下的"语句"；如果"表达式"的值为假，
则跳过整个if语句，继续向下执行。

何为真假？
假：0  0.0  ''  None  False
真：除了假就是真
'''
num5=10
num6=20
if num5==num6:
    num5=100
print("num5 =",num5)

'''
if-else语句
格式：
if 表达式：
    语句1
else：
    语句2
    
逻辑：当程序执行到if-else语句时，首先计算"表达式"的值。如果表达式的值为真，那么就执行"语句1"，执行完"语句1"后跳出整
个if—else语句；如果"表达式"的值为假，则执行"语句2"，执行完"语句2"后跳出整个if—else语句
'''

#if练习
#从控制台输入一个整数，判断是否为偶数
num=int(input("请输入一个数："))
if num%2==0:
    print(num,"是偶数")
else:
    print(num,"是奇数")

#从控制台输入一个三位数，如果是水仙花数就打印"是水仙花数"，否则打印"不是水仙花数"。
#水仙花数：153=1^3+5^3+3^3
a=int(input("请输入一个三位数："))
b=a//100
c=(a%100)//10
d=(a%100)%10
print(a,b,c,d)
if a==(b**3+c**3+d**3):
    print("是水仙花数")
else:
    print("不是水仙花数")

#从控制台输入一个五位数，如果是回文数就打印"是回文数"，否则打印"不是回文数"。
#回文数：11111、12321、12221  对称
a1=int(input("请输入一个五位数："))
b1=a1//10000
c1=(a1%10000)//1000
d1=((a1%10000)%1000)//100
e1=(((a1%10000)%1000)%100)//10
f1=(((a1%10000)%1000)%100)%10
print(a1,b1,c1,d1,e1,f1)
if b1==e1&c1==f1:
    print("是回文数")
else:
    print("不是回文数")

#从控制台输入两个数，输出较大的值，建议不使用max函数
a2=int(input("请输入一个数："))
b2=int(input("请再输入一个数："))
if a2>b2:
    print(a2)
else:
    print(b2)

#从控制台输入三个数，输出较大的值，建议不使用max函数
a3=int(input("请输入一个数："))
b3=int(input("请再输入一个数："))
c3=int(input("请再输入一个数："))
if a3>b3:
    if a3>c3:
        print(a3)
    else:
        print(c3)
else:
    if b3>c3:
        print(b3)
    else:
        print(c3)

'''
位运算符：按位运算符是把数字看作二进制数来进行计算
'''

# & 按位与运算符
#二进制的两位同时为1时，结果为1
print(5&7)  #5的二进制位101，7的二进制位111，按位与得到101，换算为十进制为5

# | 按位或运算符
#二进制的两位有一位为1时，结果为1
print(5|7)  #5的二进制位101，7的二进制位111，按位或得到111，换算为十进制为7

# ^ 按位异或运算符
#二进制的两位相异时，结果为1
print(5^7)  #5的二进制位101，7的二进制位111，按位异或得到010，换算为十进制为2

# ~ 按位取反运算符
#每个二进制数据位取反，1变0，0变1
print(~5)
'''
5=00000101
取反得到11111010（首位为1，说明是负数）
然后减去1得到11111001
然后取反得到00000110，就是6的二进制，这是结果的正数部分
添上符号就得到了5的按位取反的结果
'''

# << 左移运算符
#各二进制位全部左移移动若干位，由<<右侧的数字决定，高位丢弃，低位补0
print(2<<2)  #2的二进制为00000010，左移两位得到00001000，换算为十进制为8

# >> 右移运算符
#各二进制位全部右移移动若干位，由>>右侧的数字决定
print(13>>2) #13的二进制为00001101，右移两位得到00000011，换算为十进制为3

#负数做移位运算此处不做了解

'''
关系运算符：==、!=、>、<、>=、<=
关系表达式：
    格式：表达式1  关系运算符  表达式2
    功能：计算"表达式1"和"表达式2的值"
    值：如果关系成立，则整个关系运算表达式的值为真，否则为假
'''

'''
逻辑运算符：
1、逻辑与 and

   逻辑与运算表达式：表达式1 and 表达式2
   值：[有一个表达式为假就为假]
   如果表达式1的值为真，表达式2的值为真，则整体逻辑与运算表达式的值为真；
   如果表达式1的值为真，表达式2的值为假，则整体逻辑与运算表达式的值为假；
   如果表达式1的值为假，表达式2的值为真，则整体逻辑与运算表达式的值为假；
   如果表达式1的值为假，表达式2的值为假，则整体逻辑与运算表达式的值为假。 

2、逻辑或 or   

 逻辑与运算表达式：表达式1 or 表达式2
   值：[有一个表达式为真就为真]
   如果表达式1的值为真，表达式2的值为真，则整体逻辑与运算表达式的值为真；
   如果表达式1的值为真，表达式2的值为假，则整体逻辑与运算表达式的值为真；
   如果表达式1的值为假，表达式2的值为真，则整体逻辑与运算表达式的值为真；
   如果表达式1的值为假，表达式2的值为假，则整体逻辑与运算表达式的值为假。 

3、逻辑非 not   

 逻辑与运算表达式：not 表达式
   值：[颠倒黑白]
   如果表达式的值为真，则整体逻辑与运算表达式的值为假；
   如果表达式的值为假，则整体逻辑与运算表达式的值为真；
   
短路原则：
例：表达式1 and 表达式2 and 表达式3 and ...... and 表达式n
   若表达式1为假，则之后的表达式不进行计算，按此类推，此为短路原则。
'''

'''
成员运算符：
    in(如果在指定的序列中找到了值,则返回True，否则返回False)
    not in(如果在指定的序列中没有找到值,则返回True，否则返回False)
'''

'''
身份运算符：
    is：判断两个标识符是不是引用同一个对象
    is not:判断两个标识符是不是引用不同的对象
'''

'''
运算符优先级：
**
~ + -   #此处+、-为正负号（一元加减）
* / % //
+ -     #加减符号
>> << 
&
^ |
<= < > >=
== !=
= += -= *= /= %= //=
is  is not
in  not in
not or  and
'''
